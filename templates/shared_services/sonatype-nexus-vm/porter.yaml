---
name: tre-shared-service-sonatype-nexus
version: 2.2.5
description: "A Sonatype Nexus shared service"
dockerfile: Dockerfile.tmpl
registry: azuretre

credentials:
  - name: azure_tenant_id
    env: ARM_TENANT_ID
  - name: azure_subscription_id
    env: ARM_SUBSCRIPTION_ID
  - name: azure_client_id
    env: ARM_CLIENT_ID
  - name: azure_client_secret
    env: ARM_CLIENT_SECRET
parameters:
  - name: tre_id
    type: string
    description: "The ID of the parent TRE instance e.g., mytre-dev-3142"
  - name: id
    type: string
    description: "Resource ID"
  - name: mgmt_acr_name
    type: string
    description: "The name of the Azure Container Registry"
  - name: tfstate_resource_group_name
    type: string
    description: "Resource group containing the Terraform state storage account"
  - name: tfstate_storage_account_name
    type: string
    description: "The name of the Terraform state storage account"
  - name: tfstate_container_name
    type: string
    default: "tfstate"
    description: "The name of the Terraform state storage container"
  - name: arm_use_msi
    env: ARM_USE_MSI
    type: boolean
    default: false
  - name: ssl_cert_name
    type: string
    default: "nexus-ssl"
    description: "Name of the certificate for configuring Nexus SSL with (stored in the core KeyVault)"
  - name: workspace_vm_allowed_fqdns
    type: string
    default: '["r3.o.lencr.org","x1.c.lencr.org"]'
    description: "FQDNs to whitelist for workspace vm"
  - name: nexus_allowed_fqdns
    type: string
    default: '["*pypi.org","files.pythonhosted.org","security.ubuntu.com","archive.ubuntu.com","keyserver.ubuntu.com","repo.anaconda.com","*.docker.com","*.docker.io","conda.anaconda.org","azure.archive.ubuntu.com","packages.microsoft.com","repo.almalinux.org","download-ib01.fedoraproject.org","cran.r-project.org","cloud.r-project.org"]'
    description: "FQDNs to whitelist for Nexus package repositories"
  - name: shared_address_prefixes
    type: string

mixins:
  - exec
  - terraform:
      clientVersion: 1.2.6
  - az

install:
  - terraform:
      description: "Deploy shared service"
      input: false
      vars:
        tre_id: "{{ bundle.parameters.tre_id }}"
        tre_resource_id: "{{ bundle.parameters.id }}"
        ssl_cert_name: "{{ bundle.parameters.ssl_cert_name }}"
      backendConfig:
        resource_group_name: "{{ bundle.parameters.tfstate_resource_group_name }}"
        storage_account_name: "{{ bundle.parameters.tfstate_storage_account_name }}"
        container_name: "{{ bundle.parameters.tfstate_container_name }}"
        key: "{{ bundle.parameters.tre_id }}-shared-service-sonatype-nexus-vm"

upgrade:
  - terraform:
      description: "Upgrade shared service"
      input: false
      vars:
        tre_id: "{{ bundle.parameters.tre_id }}"
        tre_resource_id: "{{ bundle.parameters.id }}"
        ssl_cert_name: "{{ bundle.parameters.ssl_cert_name }}"
      backendConfig:
        resource_group_name: "{{ bundle.parameters.tfstate_resource_group_name }}"
        storage_account_name: "{{ bundle.parameters.tfstate_storage_account_name }}"
        container_name: "{{ bundle.parameters.tfstate_container_name }}"
        key: "{{ bundle.parameters.tre_id }}-shared-service-sonatype-nexus-vm"

uninstall:
  - terraform:
      description: "Tear down shared service"
      input: false
      vars:
        tre_id: "{{ bundle.parameters.tre_id }}"
        tre_resource_id: "{{ bundle.parameters.id }}"
        ssl_cert_name: "{{ bundle.parameters.ssl_cert_name }}"
      backendConfig:
        resource_group_name: "{{ bundle.parameters.tfstate_resource_group_name }}"
        storage_account_name: "{{ bundle.parameters.tfstate_storage_account_name }}"
        container_name: "{{ bundle.parameters.tfstate_container_name }}"
        key: "{{ bundle.parameters.tre_id }}-shared-service-sonatype-nexus-vm"
